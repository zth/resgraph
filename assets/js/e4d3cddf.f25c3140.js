"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[202],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=c,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function f(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=r.length,a=new Array(o);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:c,a[1]=i;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3010:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(7462),c=(r(7294),r(3905));const o={},a="Best Practices",i={unversionedId:"best-practices",id:"best-practices",title:"Best Practices",description:"- Annotate resolver functions or inference might surprise you.",source:"@site/docs/best-practices.md",sourceDirName:".",slug:"/best-practices",permalink:"/resgraph/docs/best-practices",draft:!1,editUrl:"https://github.com/zth/resgraph/tree/main/docs/templates/shared/docs/best-practices.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Subscriptions",permalink:"/resgraph/docs/subscriptions"},next:{title:"Design Decisions",permalink:"/resgraph/docs/design-decisions"}},s={},u=[{value:"Project structure",id:"project-structure",level:2}],l={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,c.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"best-practices"},"Best Practices"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Annotate resolver functions or inference might surprise you."),(0,c.kt)("li",{parentName:"ul"},"Active dumping the debug schema so you'll always be able to easily audit any changes to your schema.")),(0,c.kt)("h2",{id:"project-structure"},"Project structure"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Need to avoid circular dependencies"),(0,c.kt)("li",{parentName:"ul"},"Sometimes types need to be mutually recursive"),(0,c.kt)("li",{parentName:"ul"},"Interfaces")))}d.isMDXComponent=!0}}]);