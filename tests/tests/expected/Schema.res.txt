Hover tests/Schema.res 4:6
{"status": "Hover", "item": {"contents": {"kind": "markdown", "value": "GraphQL scalar generated by ResGraph:\n```graphql\n\n\"\"\"A timestamp. \"Testing quotes here\".\"\"\"\nscalar Timestamp\n```"}}}
Hover tests/Schema.res 11:18
{"status": "Hover", "item": null}
Hover tests/Schema.res 39:13
{"status": "Hover", "item": {"contents": {"kind": "markdown", "value": "GraphQL union generated by ResGraph:\n```graphql\n\n\"\"\"A user or a group.\"\"\"\nunion UserOrGroup = \n  | \"\"\" This is a user.\"\"\" User\n  | \"\"\" And this is a group. \"\"\" Group\n\n```"}}}
Hover tests/Schema.res 44:12
{"status": "Hover", "item": {"contents": {"kind": "markdown", "value": "GraphQL enum generated by ResGraph:\n```graphql\n\n\"\"\"Indicates what status a user currently has.\"\"\"\nenum UserStatus {\n\n  \"\"\"User is online.\"\"\"\n  ONLINE\n\n  \"\"\"User is offline.\"\"\"\n  Offline\n\n  \"\"\"User is idle.\"\"\"\n  Idle @deprecated(reason: \"Use 'Offline' instead. This should be \\\"escaped\\\".\")\n}\n```"}}}
Hover tests/Schema.res 80:6
{"status": "Hover", "item": {"contents": {"kind": "markdown", "value": "GraphQL input object generated by ResGraph:\n```graphql\n\n\"\"\"Additional for searching for a user.\"\"\"\ninput UserConfigContext {\n  groupId: String\n  name: String\n}\n```"}}}
Hover tests/Schema.res 191:7
{"status": "Hover", "item": {"contents": {"kind": "markdown", "value": "GraphQL object type field generated by ResGraph:\n```graphql\ntype Mutation {\n  addUser(name: String!): User\n}\n```"}}}
generating schema from ./src/

Adding scalar TimestampZ
Adding scalar TimestampHidden
Adding scalar TimestampHiddenSerializable
Adding interface hasName
Checking for type to attach resolver hasName to
Checking for type to attach resolver abbreviatedName to
Adding interface node
Checking for type to attach resolver node to
Checking for type to attach resolver nodes to
Checking for type to attach resolver id to
Adding scalar timestamp
Adding scalar timestampList
Adding interface interfaceNobodyImplements
Adding union userOrGroup
Adding enum userStatus
Checking for type to attach resolver name to
Checking for type to attach resolver currentStatus to
Checking for type to attach resolver allNames to
Adding input object userConfigContext
Adding input object userConfig
Checking for type to attach resolver me to
Checking for type to attach resolver entity to
Checking for type to attach resolver searchForUser to
Checking for type to attach resolver allowExplicitNull to
Checking for type to attach resolver listAsArgs to
Checking for type to attach resolver pet to
Checking for type to attach resolver customScalar to
Checking for type to attach resolver customScalarImplSerializable to
Checking for type to attach resolver addUser to
Checking for type to attach resolver currentTime to
Checking for type to attach resolver currentTimeFlat to
Checking for type to attach resolver totalCount to
Checking for type to attach resolver allUsers to
Adding union inlineUnion
Checking for type to attach resolver inlineUnion to
Adding input union paginationArgs
Adding input object PaginationArgsForward
Adding input object PaginationArgsBackwards
Adding input object coordinates
Adding input object address
Adding input union location
Adding input object LocationByMagicString
Checking for type to attach resolver findThing to
Adding input union location
Checking for type to attach resolver inferredEnum to
{
  "status": "Error",
  "errors": 
    [
            {
        "range": {"start": {"line": 0, "character": -1}, "end": {"line": 0, "character": -1}},
        "file": "./tests/Schema.res",
        "message": "This is not a valid GraphQL type: [> #Offline | #Online]"
      },
      {
        "range": {"start": {"line": 293, "character": 4}, "end": {"line": 293, "character": 16}},
        "file": "./tests/Schema.res",
        "message": "Could not figure out what GraphQL type to attach this resolver to. Make sure the first argument to your resolver is an unlabelled argument of the GraphQL type you want this resolver to be attached to."
      }
    ]
}
Hover tests/Schema.res 237:10
{"status": "Hover", "item": null}
