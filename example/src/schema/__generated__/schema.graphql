scalar Timestamp

scalar Timestamp2

enum TimestampFormat {
  Timestamp
  HumanReadable
}

interface HasName {
  name: String!
}


"""Information about pagination in a connection."""
type PageInfo {

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  currentTimeFloat(format: TimestampFormat): String
  currentTime: Timestamp2
  me(onlyIfAvailable: Boolean!): User
}

type User implements HasName {
  name: String!
  age: Int!
}

